services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5

  postgresdb:
    image: postgres:15-alpine
    container_name: postgresdb
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sa123
      POSTGRES_DB: mpproduct
    volumes:
      - postgres_data:/var/lib/postgresql/data

  productsapi:
    build:
      context: ../
      dockerfile: ./Products/API/Dockerfile
    container_name: productsapi
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresdb:
        condition: service_started
    ports:
      - "8022:8022"
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8022
      - POSTGRESQL__HOST=postgresdb
      - POSTGRESQL__PORT=5432
      - POSTGRESQL__DATABASE=mpproduct
      - POSTGRESQL__USERNAME=postgres
      - POSTGRESQL__PASSWORD=sa123
    restart: always
  
  productsconsumer:
    build:
      context: ../
      dockerfile:  ./Products/EventConsumer/Dockerfile
    container_name: productsserviceconsumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresdb:
        condition: service_started
    ports:
      - '8021:8021'
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ__HOST=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__USERNAME=guest
      - RABBITMQ__PASSWORD=guest
      - RABBITMQ__CUSTOMER__EXCHANGE=customer.exchange
      - RABBITMQ__CUSTOMER__QUEUE=customer.queue
      - RABBITMQ__CUSTOMER__ROUTINGKEY=customer
      - ASPNETCORE_URLS=http://0.0.0.0:8021
      - POSTGRESQL__HOST=postgresdb
      - POSTGRESQL__PORT=5432
      - POSTGRESQL__DATABASE=mpproduct
      - POSTGRESQL__USERNAME=postgres
      - POSTGRESQL__PASSWORD=sa123
    restart: always
  
  productspublisher:
    build:
      context: ../
      dockerfile:  ./Products/EventPublisher/Dockerfile
    container_name: productsservicepublisher
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresdb:
        condition: service_started
    ports:
      - '8023:8023'
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ__HOST=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__USERNAME=guest
      - RABBITMQ__PASSWORD=guest
      - ASPNETCORE_URLS=http://0.0.0.0:8023
      - POSTGRESQL__HOST=postgresdb
      - POSTGRESQL__PORT=5432
      - POSTGRESQL__DATABASE=mpproduct
      - POSTGRESQL__USERNAME=postgres
      - POSTGRESQL__PASSWORD=sa123
      # - ConnectionStrings__DefaultConnection='Server=host.docker.internal;Port=5432;Database=mpproduct;User ID=postgres;Password=sa123'
    restart: always

  producssynchronizer:
      build:
        context: ../
        dockerfile:  ./Products/Scheduler/Dockerfile
      container_name: productssynchronizer
      depends_on:
        postgresdb:
          condition: service_started
      ports:
        - '8024:8024'
      environment:
        # - ASPNETCORE_ENVIRONMENT=Development
        - POSTGRESQL__HOST=postgresdb
        - POSTGRESQL__PORT=5432
        - POSTGRESQL__DATABASE=mpproduct
        - POSTGRESQL__USERNAME=postgres
        - POSTGRESQL__PASSWORD=sa123
      
volumes:
  postgres_data:
    # driver: local